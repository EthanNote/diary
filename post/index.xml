<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Diary</title>
    <link>https://ethannote.github.io/diary/post/</link>
    <description>Recent content in Posts on Diary</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 13 Apr 2018 23:18:51 +0800</lastBuildDate>
    
	<atom:link href="https://ethannote.github.io/diary/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Empty</title>
      <link>https://ethannote.github.io/diary/post/18-04-13/</link>
      <pubDate>Fri, 13 Apr 2018 23:18:51 +0800</pubDate>
      
      <guid>https://ethannote.github.io/diary/post/18-04-13/</guid>
      <description>设备认证 不同设备的数据存储在不同的 collections 的中，设备需提供 name, password，才能将数据存储到对应 name 的 collection 中</description>
    </item>
    
    <item>
      <title>18-04-12</title>
      <link>https://ethannote.github.io/diary/post/18-04-12/</link>
      <pubDate>Thu, 12 Apr 2018 23:28:52 +0800</pubDate>
      
      <guid>https://ethannote.github.io/diary/post/18-04-12/</guid>
      <description>昨天睡前看到了名为 Layoutit 的在线 Bootstrap 设计工具，能够很方便地制作项目所需的UI。今天上午用它制作了一个页面，并结合IoT代码实现了消息推送显示。 目前仍需要制作一个雷达定位坐标图，晚上看到了jsDraw2DX图形库，看着效果还不错。
http://jsdraw2dx.jsfiction.com/
不得不承认调试 css 各种参数很耗时间，一坐就是一下午。
 padding-bottom: 100% 可以让div锁定为正方形
 垂直分割线可以用div 实现 &amp;lt;div style=&amp;quot;width:0.5px;border:0.5px solid lightgray;float:right;height:150%;&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;
 若要模仿控制台，垂直滚动条自动移动到最下部，可以对最后一个元素进行 scrollIntoView
 浏览器缓存会导致 css 不能正常更新，可以删除浏览记录
  </description>
    </item>
    
    <item>
      <title>18-04-11</title>
      <link>https://ethannote.github.io/diary/post/18-04-11/</link>
      <pubDate>Wed, 11 Apr 2018 23:08:09 +0800</pubDate>
      
      <guid>https://ethannote.github.io/diary/post/18-04-11/</guid>
      <description>网易的实习面试放弃了。无论去或是不去，对我来说都不轻松。西安到杭州，坐火车要24小时，高铁7小时，无论哪种方式都要前一天去，路上或是宾馆过一夜。 本来就没有足够时间准备面试问题，这一路上再这么一折腾，怕是满脑子都只想着赶紧结束回来吧。
只是，机会难得，在Ray的鼓励下，我买了车票。
晚上我把面试的计划告诉了李老师，发完微信消息我十分期待得到一个否定的回答，为什么是期待否定的呢。我的期待只过了10分钟就顺利实现了，我不用再多想， 难过当然是有的，但更多的是释然，我不用再操心这么一件事情了，或许是比打一场无准备之仗更好的结果吧。
晚上我把 Raycast2D 的 bug 修复了，产生bug的原因是扫描线未遇到障碍时，未把该方向标记为无效方向，当扫描点位于围墙外时，该点有着极大的覆盖范围， 进行绘图时，由于无效值远大于有效值，导致图像几乎只有黑白两色。新的绘图中，若某点任一方向的扫描距离达到最远无效距离，则该点不列入 scatter 列表。
晚饭后喝了一罐啤酒，缓解情绪。青岛9度没感觉，下次记得买干啤。</description>
    </item>
    
    <item>
      <title>18-04-10</title>
      <link>https://ethannote.github.io/diary/post/18-04-10/</link>
      <pubDate>Tue, 10 Apr 2018 15:52:24 +0800</pubDate>
      
      <guid>https://ethannote.github.io/diary/post/18-04-10/</guid>
      <description>重新设计 传输 建立 TCP 客户端、服务器，数据内容为 Python dict, 通过 pickle 将 dict 序列化并发送，服务器端反序列化得到dict对象
import socket import pickle class Reporter: def __init__(self, ip, port): self.sock=socket.socket() self.sock.connect((ip, port)) def report(self, data: dict): if type(data)!=dict: raise TypeError(&#39;require dict&#39;) self.sock.send(pickle.dumps(data))  接收 使用标准库自带的 ThreadingTCPServer, 并实现 BaseRequestHandler 的子类，即可完成服务器端数据接收。重写父类的 handle 方法。
data = self.request.recv(1024) # load dict object from bytes obj = pickle.loads(data) if type(obj) == dict: # set time obj[&#39;time&#39;] = datetime.datetime.now() # check auth info if &#39;auth&#39; in obj.</description>
    </item>
    
    <item>
      <title>18-04-09</title>
      <link>https://ethannote.github.io/diary/post/18-04-09/</link>
      <pubDate>Mon, 09 Apr 2018 10:19:35 +0800</pubDate>
      
      <guid>https://ethannote.github.io/diary/post/18-04-09/</guid>
      <description>MongoDB 服务器搭建 安装 sudo apt install mongodb  同时安装 mongodb, mongodb-client, mongodb-server
启动 sudo service mongodb start  配置 sudo vim /etc/mongodb.conf  其中默认ip为 127.0.0.1, 默认端口为 27017
允许外部访问 bind_ip = 0.0.0.0 auth = true  合理的设计中数据库不应该直接暴露到外网，应该设计一个中间件。
讲道理设置安全认证纯属心虚，有人想着攻击的时候怕是产品都卖出去一波了，然后让客户加钱解决安全问题
用户设置 设置一个管理员和一个通用软件账户，管理员角色为 root, 软件账户角色为指定数据库的 readWrite
命令行客户端
mongo &amp;lt;ip&amp;gt;/&amp;lt;db_name&amp;gt; -u &amp;lt;username&amp;gt; -p  或者
mongo &amp;lt;ip&amp;gt; use &amp;lt;db_name&amp;gt; db.auth(&amp;lt;username&amp;gt;, &amp;lt;password&amp;gt;)  Python 连接  安装数据库驱动
pip install pymongo  连接并读写数据库
  from pymongo import MongoClient client=MongoClient(&#39;mongodb://&amp;lt;username&amp;gt;:&amp;lt;password&amp;gt;&#39;) print(client.</description>
    </item>
    
  </channel>
</rss>
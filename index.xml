<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Diary</title>
    <link>https://ethannote.github.io/diary/</link>
    <description>Recent content on Diary</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 09 May 2018 11:03:47 +0800</lastBuildDate>
    
	<atom:link href="https://ethannote.github.io/diary/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>18 05 09</title>
      <link>https://ethannote.github.io/diary/post/18-05-09/</link>
      <pubDate>Wed, 09 May 2018 11:03:47 +0800</pubDate>
      
      <guid>https://ethannote.github.io/diary/post/18-05-09/</guid>
      <description>起来得很晚，9点多醒了，10点多起来。
觉得把 pygame 用在数据可视化、产品GUI上是个不错的想法。PyQt 已经是不错的GUI库了，而 pygame 在用少量的代码灵活实现显示效果方面具有优势。
python 库 pgzero 是个好东西。基于 pygame , setup 一个具有基本功能的游戏十分简单，当然功能也有所限制。总体感觉跟flask风格很像，可以用几行代码实现demo,接下来就考虑如何 design 了。pgzero 的 zero 思想在于把所有注意力集中在游戏逻辑上，完全屏蔽游戏循环，消息队列等底层逻辑。
然而封装与扩展本身就是矛盾 的，game zero 意味着必须要实现扩展，比如我想要实现一个 thSTG zero, 即只需要实现弹幕关卡设计而无需关心底层问题，那么 pgzero 的封装就必须解开，加入弹幕射击所必须的模块后再封装。凌晨3点实现了demo。
好在 pgzero 的源代码不难理解，import pgzero 然后仿照 class PGZeroGame 实现自己的游戏底层逻辑封装。因为它建立在 pygame 之上，且模块之间有较好的弱耦合性，所以可以混合使用 pgzero 和自己实现的基于 pygame 的类库。我比较看好它提供的 Actor 类，用来实现弹幕 STG 中各种 2D 元素基本足够。唯一的问题可能在于精灵资源管理，例如需要处理一下大量子弹实例所带来的创建与销毁问题。
明天出差，真TM想宅着哪都不去，回来的票还是我自己买的。
电脑用着用着断电了，有可能是CPU硅脂不行了，那会儿风扇声音挺大的。用了5年多，挺想换MAC的。
晚上一台旧雷达送到了，立即进行连接测试。他们提供的雷达调试工具可以正常获取雷达数据，数据传输使用 UART 串口，为了能把它接入现有系统，我们必须实现自己的 串口数据接收，但是无论如何都得不到文档中给出的数据格式。坏的猜想是，软硬件版本与文档版本不一致。好的猜想是UART接收参数没有设置正确。
接下来用王老师提供的旧版设备进行了部署测试并进行录像。测试在门口的开阔场地中进行，最后我们导演了一个办公场景，我安排行进路线和行走顺序， 以及操作定位软件，并进行录屏。</description>
    </item>
    
    <item>
      <title>18-05-06</title>
      <link>https://ethannote.github.io/diary/post/18-05-06/</link>
      <pubDate>Sun, 06 May 2018 23:25:21 +0800</pubDate>
      
      <guid>https://ethannote.github.io/diary/post/18-05-06/</guid>
      <description>荒废了好多天日记，罪过罪过。
为蒋师兄准备的 Hackathon Solutions / python 花了挺多心思，也速成了不少技能。 准备了 Flask、Django 的基础教程，认识了 SQLAlchemy 这么个 ORM，也了解了 Flask-SQLArchemy 插件。Django 自带 ORM 以前体验过，相当好用。此外王博何博需要准备 Java web 相关的示例，我花了几个小时重温 maven，虽然内心深处对 Java web 充满草泥马，但还是小结如下：
交互式选择项目模板
mvn archetype:generate  项目使用 SSH 框架可以查找 struts 2 相关的模板
打 war 包
mvn package  war 包拷贝到 Tomcat app 目录下，服务器启动时自动解压部署。
闲的时候打了刺激战场，对枪的时候模拟器就卡，必死，战术卡顿，呵。
昨天晚上睡公司了，晚上洗完澡心情大悦，就背着被子来公司了。夜里给雷达系统增加了个历史记录显示模块，类似GitHub的 contribution 年历。
今天实现了时间切片功能，仅处理并生成从当前时间开始后续的坐标跟踪。
晚上成功读出了新雷达的测量数据，中午的时候安排姜老板把新拿来的设备连上读数，折腾一下午没弄成，先是不知道UDP上位机端口，后来发现是人家没给新文档。 后来他使劲写得不到预期的数据，觉得文档的格式说明有问题。晚上我介入过来，告诉他按我的思路来写代码，成了。虽然让我亲自上阵可能会更快， 但锻炼机会还是要给的，不然我一走人，项目就很难做下去了。而且各种事情都我来做怕是要累死。
明天公司要开会，我起来后得把被子收一下。
在公司穿拖鞋溜达真爽。</description>
    </item>
    
    <item>
      <title>18-04-16 老婆亲临指导标题</title>
      <link>https://ethannote.github.io/diary/post/18-04-16/</link>
      <pubDate>Mon, 16 Apr 2018 16:45:37 +0800</pubDate>
      
      <guid>https://ethannote.github.io/diary/post/18-04-16/</guid>
      <description>参加完腾讯实习招聘第二轮面试，心情挺复杂的，比起关心面试结果，我更在意今后的职业道路。必须要感谢二面的面试官，让我思考了很多事情。
 学校  科研与产业的目标不一致，从未让我向今天觉得可怕。西电计算机学院 ESI 排名很靠前，在学术圈里有着不错的声誉，老师数量多，论文成果自然也会多， 百家争鸣百花齐放，对于大学而言这再好不过了，尤其对于西电这所非985学校，在保持竞争力方面有着重要意义，毕竟成电是它最大的心结。但是， 硕士研究生身在圈内，前途却在圈外，尤其是学硕。今天正在做的工作，不太容易成为今后的铺垫，未来所需的职业素质，平时的学习工作中并不容易培养。
学校的培养目标是研究型人才，而硕士毕业生更多的工作是实现某种设计。在最顶级的学术会议上，人们不会去在意工程细节，例如开发平台，系统架构。 而在企业，技术细节或许很容易决定成败。
 导师  导师的正确称呼应该是老板，所以自然而然不会在工作中支持员工努力寻找离职后的工作。我是众多廉价劳动力中的普通一个。导师通常分为两类，会coding的和有资源的。 我的导师是后者，他年轻的时候则是前者。因此我不会得到技术上的指导，一切依靠自学，难免跑偏。导师是希望学生找到好工作的，但恐怕这个希望只能靠我们自己顶着 压力自学成才了。
 个人  假如目前的研究项目能按照老板预期，研发完成，获得投资，并孵化成功成立公司，我觉得那再好不过了。老板尽管让人有诸多不乐意的地方，但务实求真我是认可的。 一方面科研与工作无缝对接，另一方面从一开始就参与或者带领核心技术研发。对于毕业找工作的正常路线，技术积累，不断学习是一个艰难的过程， 尽管实验室安排的工作确实可以提供软件开发的锻炼机会，但专注点却不在于研究所依赖的技术本身。因此很容易形成“只是会用现有的工具来实现某个系统”的知识水平， 尽管这个系统可能是重点科研成果。
能够进入二面，在一定程度上证明了我具备一定的基础，但是还远远不够，我应该更深入了解技术，去问why。
 企业  基础设施研发是一件吃力不讨好的事情，比如在现有游戏引擎日渐成熟大行其道的环境下，就不太可能会有企业去从头开始研发游戏引擎，而是吃透已有的技术， 例如彻底研究虚幻4的开源代码，然后研发创新产品。为此它需要熟知这一领域的开发者进入企业，越熟悉越好。所以在校期间所从事的项目能与某家企业某个部门完全对口， 那就再好不过了，对个人和企业都节约了学习培养成本。
总结 学校是否在考虑培养企业需要的人才呢，政策、指导思想什么的或许是的，但具体操作则是交给硕士研究生导师的，答案就值得思考了。
接下来务必深入到技术中去，仔细阅读学习一些 C++ 项目源代码。</description>
    </item>
    
    <item>
      <title>18-04-14</title>
      <link>https://ethannote.github.io/diary/post/18-04-14/</link>
      <pubDate>Sat, 14 Apr 2018 23:22:22 +0800</pubDate>
      
      <guid>https://ethannote.github.io/diary/post/18-04-14/</guid>
      <description>累得慌， 难受
上午睡了一上午，下午玩了一下午
基金黄金统统大跌</description>
    </item>
    
    <item>
      <title>18-04-13</title>
      <link>https://ethannote.github.io/diary/post/18-04-13/</link>
      <pubDate>Fri, 13 Apr 2018 23:18:51 +0800</pubDate>
      
      <guid>https://ethannote.github.io/diary/post/18-04-13/</guid>
      <description>设备认证 不同设备的数据存储在不同的 collections 的中，设备需提供 name, password，才能将数据存储到对应 name 的 collection 中</description>
    </item>
    
    <item>
      <title>18-04-12</title>
      <link>https://ethannote.github.io/diary/post/18-04-12/</link>
      <pubDate>Thu, 12 Apr 2018 23:28:52 +0800</pubDate>
      
      <guid>https://ethannote.github.io/diary/post/18-04-12/</guid>
      <description>昨天睡前看到了名为 Layoutit 的在线 Bootstrap 设计工具，能够很方便地制作项目所需的UI。今天上午用它制作了一个页面，并结合IoT代码实现了消息推送显示。 目前仍需要制作一个雷达定位坐标图，晚上看到了jsDraw2DX图形库，看着效果还不错。
http://jsdraw2dx.jsfiction.com/
不得不承认调试 css 各种参数很耗时间，一坐就是一下午。
 padding-bottom: 100% 可以让div锁定为正方形
 垂直分割线可以用div 实现 &amp;lt;div style=&amp;quot;width:0.5px;border:0.5px solid lightgray;float:right;height:150%;&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;
 若要模仿控制台，垂直滚动条自动移动到最下部，可以对最后一个元素进行 scrollIntoView
 浏览器缓存会导致 css 不能正常更新，可以删除浏览记录
  </description>
    </item>
    
    <item>
      <title>18-04-11</title>
      <link>https://ethannote.github.io/diary/post/18-04-11/</link>
      <pubDate>Wed, 11 Apr 2018 23:08:09 +0800</pubDate>
      
      <guid>https://ethannote.github.io/diary/post/18-04-11/</guid>
      <description>网易的实习面试放弃了。无论去或是不去，对我来说都不轻松。西安到杭州，坐火车要24小时，高铁7小时，无论哪种方式都要前一天去，路上或是宾馆过一夜。 本来就没有足够时间准备面试问题，这一路上再这么一折腾，怕是满脑子都只想着赶紧结束回来吧。
只是，机会难得，在Ray的鼓励下，我买了车票。
晚上我把面试的计划告诉了李老师，发完微信消息我十分期待得到一个否定的回答，为什么是期待否定的呢。我的期待只过了10分钟就顺利实现了，我不用再多想， 难过当然是有的，但更多的是释然，我不用再操心这么一件事情了，或许是比打一场无准备之仗更好的结果吧。
晚上我把 Raycast2D 的 bug 修复了，产生bug的原因是扫描线未遇到障碍时，未把该方向标记为无效方向，当扫描点位于围墙外时，该点有着极大的覆盖范围， 进行绘图时，由于无效值远大于有效值，导致图像几乎只有黑白两色。新的绘图中，若某点任一方向的扫描距离达到最远无效距离，则该点不列入 scatter 列表。
晚饭后喝了一罐啤酒，缓解情绪。青岛9度没感觉，下次记得买干啤。</description>
    </item>
    
    <item>
      <title>18-04-10</title>
      <link>https://ethannote.github.io/diary/post/18-04-10/</link>
      <pubDate>Tue, 10 Apr 2018 15:52:24 +0800</pubDate>
      
      <guid>https://ethannote.github.io/diary/post/18-04-10/</guid>
      <description>重新设计 传输 建立 TCP 客户端、服务器，数据内容为 Python dict, 通过 pickle 将 dict 序列化并发送，服务器端反序列化得到dict对象
import socket import pickle class Reporter: def __init__(self, ip, port): self.sock=socket.socket() self.sock.connect((ip, port)) def report(self, data: dict): if type(data)!=dict: raise TypeError(&#39;require dict&#39;) self.sock.send(pickle.dumps(data))  接收 使用标准库自带的 ThreadingTCPServer, 并实现 BaseRequestHandler 的子类，即可完成服务器端数据接收。重写父类的 handle 方法。
data = self.request.recv(1024) # load dict object from bytes obj = pickle.loads(data) if type(obj) == dict: # set time obj[&#39;time&#39;] = datetime.datetime.now() # check auth info if &#39;auth&#39; in obj.</description>
    </item>
    
    <item>
      <title>18-04-09</title>
      <link>https://ethannote.github.io/diary/post/18-04-09/</link>
      <pubDate>Mon, 09 Apr 2018 10:19:35 +0800</pubDate>
      
      <guid>https://ethannote.github.io/diary/post/18-04-09/</guid>
      <description>MongoDB 服务器搭建 安装 sudo apt install mongodb  同时安装 mongodb, mongodb-client, mongodb-server
启动 sudo service mongodb start  配置 sudo vim /etc/mongodb.conf  其中默认ip为 127.0.0.1, 默认端口为 27017
允许外部访问 bind_ip = 0.0.0.0 auth = true  合理的设计中数据库不应该直接暴露到外网，应该设计一个中间件。
讲道理设置安全认证纯属心虚，有人想着攻击的时候怕是产品都卖出去一波了，然后让客户加钱解决安全问题
用户设置 设置一个管理员和一个通用软件账户，管理员角色为 root, 软件账户角色为指定数据库的 readWrite
命令行客户端
mongo &amp;lt;ip&amp;gt;/&amp;lt;db_name&amp;gt; -u &amp;lt;username&amp;gt; -p  或者
mongo &amp;lt;ip&amp;gt; use &amp;lt;db_name&amp;gt; db.auth(&amp;lt;username&amp;gt;, &amp;lt;password&amp;gt;)  Python 连接  安装数据库驱动
pip install pymongo  连接并读写数据库
  from pymongo import MongoClient client=MongoClient(&#39;mongodb://&amp;lt;username&amp;gt;:&amp;lt;password&amp;gt;&#39;) print(client.</description>
    </item>
    
    <item>
      <title>18-04-28</title>
      <link>https://ethannote.github.io/diary/post/18-04-28/</link>
      <pubDate>Mon, 09 Apr 2018 10:15:09 +0800</pubDate>
      
      <guid>https://ethannote.github.io/diary/post/18-04-28/</guid>
      <description>雷达设备已经连接新的系统，使用 HTML svg 显示目标移动轨迹，本周初已经实现。
不得不承认 SVG 矢量图很好用。一开始的解决方案是JS + canvas, 若情况复杂则考虑各种图形库。而使用矢量图将绘图极大简化，并且不必考虑画布缓冲区大小的问题。 SVG 矢量图本身是独立于HTML的，支持若干种基本几何图形，使用 XML 描述，可以直接嵌入到HTML中。服务器以JSON格式向浏览器被动发送跟踪路径数据， 包括路径坐标序列和路径颜色。浏览器在接收到设备消息之后，使用AJAX请求该路径数据，对于每个请求服务器都会进行数据库查询，取出定位记录，建立滤波模型， 生成路径等一系列计算。</description>
    </item>
    
  </channel>
</rss>